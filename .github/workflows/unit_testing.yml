name: Unit tests

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.x
    - name: Install refreseh_token from polly CLI as Environment Variable
      run: |
        sudo apt-get install -y jq
        sudo npm install -g @elucidatainc/pollycli
        sudo apt-get install expect
        export POLLY_USER_NAME=${{ secrets.POLLY_USER_NAME }}
        export POLLY_USER_PASSWORD=${{ secrets.POLLY_USER_PASSWORD }}
        echo '#!/usr/bin/expect -f' > login.sh
        echo 'set timeout -1' >> login.sh
        echo 'spawn polly login' >> login.sh
        echo 'expect "Enter user name:"' >> login.sh
        echo 'send -- "$env(POLLY_USER_NAME)\r"' >> login.sh
        echo 'expect "Enter password:"' >> login.sh
        echo 'send -- "$env(POLLY_USER_PASSWORD)\n"' >> login.sh
        echo 'expect eof' >> login.sh
        chmod +x ./login.sh
        ./login.sh
        temp=$(cat ~/.config/pollycli/credentials.json | jq .$(cat ~/.config/pollycli/credentials.json | jq .pollyUser.pollyemail).pollyrefreshToken)
        temp="${temp%\"}"
        export POLLY_REFRESH_TOKEN="${temp#\"}"
        echo "$POLLY_REFRESH_TOKEN"
        echo -n "$POLLY_REFRESH_TOKEN" | wc -c
        echo "::set-env name=REFRESH_TOKEN::${POLLY_REFRESH_TOKEN}"
        echo 'done'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest tests/
